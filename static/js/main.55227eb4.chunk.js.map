{"version":3,"sources":["components/loader.jsx","utils/webcam.js","components/btn-handler.jsx","utils/renderBox.js","utils/detect.js","App.jsx","index.jsx"],"names":["Loader","props","_jsxs","_objectSpread","className","children","_jsx","Webcam","_createClass","_classCallCheck","open","videoRef","navigator","mediaDevices","getUserMedia","audio","video","facingMode","then","stream","srcObject","alert","close","getTracks","forEach","track","stop","ButtonHandler","_ref","imageRef","cameraRef","_useState","useState","_useState2","_slicedToArray","streaming","setStreaming","inputImageRef","useRef","inputVideoRef","webcam","closeImage","url","current","src","URL","revokeObjectURL","value","style","display","closeVideo","type","accept","onChange","e","createObjectURL","target","files","ref","onClick","click","concat","addEventListener","renderBoxes","canvasRef","boxes_data","scores_data","classes_data","ratios","ctx","getContext","clearRect","canvas","width","height","colors","Colors","font","Math","max","round","textBaseline","i","length","labels","color","get","_boxes_data$slice","toFixed","slice","_boxes_data$slice2","y1","x1","y2","x2","fillStyle","hexToRgba","fillRect","strokeStyle","lineWidth","min","strokeRect","allClasses","name","classCounts","_i","_allClasses","klass","hasOwnProperty","maxWidth","totalHeight","_i3","_allClasses2","text","textWidth","measureText","totalWidth","offsetY","_i4","_allClasses3","boxY","textY","lineHeight","fillText","legendX","_this","palette","floor","n","this","hex","alpha","result","exec","parseInt","join","numClass","preprocess","source","modelWidth","modelHeight","xRatio","yRatio","tf","img","fromPixels","_img$shape$slice","shape","_img$shape$slice2","h","w","maxSize","imgPadded","pad","resizeBilinear","div","expandDims","detect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","model","callback","_model$inputShape$sli","_model$inputShape$sli2","_preprocess","_preprocess2","input","res","transRes","boxes","_tf$tidy","_tf$tidy2","scores","classes","nms","_args","arguments","wrap","_context","prev","next","undefined","inputShape","startScope","net","execute","transpose","squeeze","rawScores","argMax","nonMaxSuppressionAsync","sent","gather","dataSync","endScope","_x","_x2","_x3","apply","detectVideo","vidSource","detectFrame","_ref2","_callee2","_context2","videoWidth","abrupt","requestAnimationFrame","App","loading","progress","setLoading","_useState3","_useState4","setModel","modelName","useEffect","yolov8","dummyInput","warmupResults","window","location","href","onProgress","fractions","inputs","onLoad","autoPlay","muted","onPlay","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.55227eb4.chunk.js","sourcesContent":["import \"../style/loader.css\";\n\nconst Loader = (props) => {\n  return (\n    <div className=\"wrapper\" {...props}>\n      <div className=\"spinner\"></div>\n      <p>{props.children}</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","/**\n * Class to handle webcam\n */\nexport class Webcam {\n  /**\n   * Open webcam and stream it through video tag.\n   * @param {HTMLVideoElement} videoRef video tag reference\n   */\n  open = (videoRef) => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"environment\",\n          },\n        })\n        .then((stream) => {\n          videoRef.srcObject = stream;\n        });\n    } else alert(\"Can't open Webcam!\");\n  };\n\n  /**\n   * Close opened webcam.\n   * @param {HTMLVideoElement} videoRef video tag reference\n   */\n  close = (videoRef) => {\n    if (videoRef.srcObject) {\n      videoRef.srcObject.getTracks().forEach((track) => {\n        track.stop();\n      });\n      videoRef.srcObject = null;\n    } else alert(\"Please open Webcam first!\");\n  };\n}\n","import { useState, useRef } from \"react\";\nimport { Webcam } from \"../utils/webcam\";\n\nconst ButtonHandler = ({ imageRef, cameraRef, videoRef }) => {\n  const [streaming, setStreaming] = useState(null); // streaming state\n  const inputImageRef = useRef(null); // video input reference\n  const inputVideoRef = useRef(null); // video input reference\n  const webcam = new Webcam(); // webcam handler\n\n  // closing image\n  const closeImage = () => {\n    const url = imageRef.current.src;\n    imageRef.current.src = \"#\"; // restore image source\n    URL.revokeObjectURL(url); // revoke url\n\n    setStreaming(null); // set streaming to null\n    inputImageRef.current.value = \"\"; // reset input image\n    imageRef.current.style.display = \"none\"; // hide image\n  };\n\n  // closing video streaming\n  const closeVideo = () => {\n    const url = videoRef.current.src;\n    videoRef.current.src = \"\"; // restore video source\n    URL.revokeObjectURL(url); // revoke url\n\n    setStreaming(null); // set streaming to null\n    inputVideoRef.current.value = \"\"; // reset input video\n    videoRef.current.style.display = \"none\"; // hide video\n  };\n\n  return (\n    <div className=\"btn-container\">\n      {/* Image Handler */}\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: \"none\" }}\n        onChange={(e) => {\n          const url = URL.createObjectURL(e.target.files[0]); // create blob url\n          imageRef.current.src = url; // set video source\n          imageRef.current.style.display = \"block\"; // show video\n          setStreaming(\"image\"); // set streaming to video\n        }}\n        ref={inputImageRef}\n      />\n      <button\n        onClick={() => {\n          // if not streaming\n          if (streaming === null) inputImageRef.current.click();\n          // closing image streaming\n          else if (streaming === \"image\") closeImage();\n          else alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming video or webcam\n        }}\n      >\n        {streaming === \"image\" ? \"Close\" : \"Open\"} Image\n      </button>\n\n      {/* Video Handler */}\n      <input\n        type=\"file\"\n        accept=\"video/*\"\n        style={{ display: \"none\" }}\n        onChange={(e) => {\n          if (streaming === \"image\") closeImage(); // closing image streaming\n          const url = URL.createObjectURL(e.target.files[0]); // create blob url\n          videoRef.current.src = url; // set video source\n          videoRef.current.addEventListener(\"ended\", () => closeVideo()); // add ended video listener\n          videoRef.current.style.display = \"block\"; // show video\n          setStreaming(\"video\"); // set streaming to video\n        }}\n        ref={inputVideoRef}\n      />\n      <button\n        onClick={() => {\n          // if not streaming\n          if (streaming === null || streaming === \"image\") inputVideoRef.current.click();\n          // closing video streaming\n          else if (streaming === \"video\") closeVideo();\n          else alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming webcam\n        }}\n      >\n        {streaming === \"video\" ? \"Close\" : \"Open\"} Video\n      </button>\n\n      {/* Webcam Handler */}\n      <button\n        onClick={() => {\n          // if not streaming\n          if (streaming === null || streaming === \"image\") {\n            // closing image streaming\n            if (streaming === \"image\") closeImage();\n            webcam.open(cameraRef.current); // open webcam\n            cameraRef.current.style.display = \"block\"; // show camera\n            setStreaming(\"camera\"); // set streaming to camera\n          }\n          // closing video streaming\n          else if (streaming === \"camera\") {\n            webcam.close(cameraRef.current);\n            cameraRef.current.style.display = \"none\";\n            setStreaming(null);\n          } else alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming video\n        }}\n      >\n        {streaming === \"camera\" ? \"Close\" : \"Open\"} Webcam\n      </button>\n    </div>\n  );\n};\n\nexport default ButtonHandler;\n","import labels from \"./labels.json\";\n\n/**\n * Render prediction boxes\n * @param {HTMLCanvasElement} canvasRef canvas tag reference\n * @param {Array} boxes_data boxes array\n * @param {Array} scores_data scores array\n * @param {Array} classes_data class array\n * @param {Array[Number]} ratios boxes ratio [xRatio, yRatio]\n */\nexport const renderBoxes = (canvasRef, boxes_data, scores_data, classes_data, ratios) => {\n  const ctx = canvasRef.getContext(\"2d\");\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clean canvas\n\n  const colors = new Colors();\n\n  // font configs\n  const font = `${Math.max(\n    Math.round(Math.max(ctx.canvas.width, ctx.canvas.height) / 40),\n    14\n  )}px Arial`;\n  ctx.font = font;\n  ctx.textBaseline = \"top\";\n\n  for (let i = 0; i < scores_data.length; ++i) {\n    // filter based on class threshold\n    const klass = labels[classes_data[i]];\n    const color = colors.get(classes_data[i]);\n    const score = (scores_data[i] * 100).toFixed(1);\n\n    let [y1, x1, y2, x2] = boxes_data.slice(i * 4, (i + 1) * 4);\n    x1 *= ratios[0];\n    x2 *= ratios[0];\n    y1 *= ratios[1];\n    y2 *= ratios[1];\n    const width = x2 - x1;\n    const height = y2 - y1;\n\n    // draw box.\n    ctx.fillStyle = Colors.hexToRgba(color, 0.2);\n    ctx.fillRect(x1, y1, width, height);\n\n    // draw border box.\n    ctx.strokeStyle = color;\n    ctx.lineWidth = Math.max(Math.min(ctx.canvas.width, ctx.canvas.height) / 200, 2.5);\n    ctx.strokeRect(x1, y1, width, height);\n\n/*     // Draw the label background.\n    ctx.fillStyle = color;\n    const textWidth = ctx.measureText(klass + \" - \" + score + \"%\").width;\n    const textHeight = parseInt(font, 10); // base 10\n    const yText = y1 - (textHeight + ctx.lineWidth);\n    ctx.fillRect(\n      x1 - 1,\n      yText < 0 ? 0 : yText, // handle overflow label box\n      textWidth + ctx.lineWidth,\n      textHeight + ctx.lineWidth\n    );\n\n    // Draw labels\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillText(klass + \" - \" + score + \"%\", x1 - 1, yText < 0 ? 0 : yText); */\n  }\n\t\n\n// ... (原来的代码)\n\n\t// 定义所有类别和对应的颜色\n\tconst allClasses = [\n\t  { name: \"with mask\", color: \"#344593\" },\n\t  { name: \"mask weared incorrect\", color: \"#48F90A\" },\n\t  { name: \"without mask\", color: \"#FF701F\" }\n\t];\n\n\t// 计算每个类别的数量\n\tlet classCounts = {};\n\tfor (const klass of allClasses) {\n\t  classCounts[klass.name] = 0; // 初始化每个类别的数量为0\n\t}\n\tfor (let i = 0; i < classes_data.length; ++i) {\n\t  const klass = labels[classes_data[i]];\n\t  if (classCounts.hasOwnProperty(klass)) {\n\t\tclassCounts[klass]++;\n\t  }\n\t}\n\n\t// 定义图例的位置和大小\n\tconst legendX = 10; // 图例的 x 坐标\n\tconst legendY = 10; // 图例的 y 坐标\n\tconst boxSize = 20; // 每个颜色框的大小\n\t//const lineHeight = 28; // 每一行的高度\n\n\t// 设置字体和颜色\n\tctx.font = 'bold 16px Arial';\n\tctx.textBaseline = 'middle';\n\t\n\t\t// 定义图例的位置和大小\n\tconst paddingY = 10; // 文字与上下边框的距离\n\tconst lineHeight = 16 + 1.5 * paddingY; // 每一行的高度为字体大小加上上下边距\n\n\t// 计算整个图例的宽度和高度\n\tlet maxWidth = 0;\n\tconst totalHeight = lineHeight * allClasses.length;\n\tfor (const klass of allClasses) {\n\t  const text = `${klass.name}  ${classCounts[klass.name]}`;\n\t  const textWidth = ctx.measureText(text).width;\n\t  maxWidth = Math.max(maxWidth, textWidth);\n\t}\n\tconst totalWidth = maxWidth + boxSize + 15;\n\n\t// 绘制整个图例的背景框\n\tctx.fillStyle = 'rgba(255,255,255,0.8)'; // 白色，半透明\n\tctx.fillRect(legendX, legendY, totalWidth, totalHeight);\n\n\t// 绘制每个类别\n\tlet offsetY = 0;\n\tfor (const klass of allClasses) {\n\t  const color = klass.color; // 获取类别对应的颜色\n\t// 绘制颜色框\n\t  ctx.fillStyle = color;\n\t  const boxY = legendY + offsetY + (lineHeight - boxSize) / 2; // 计算颜色框的垂直位置\n\t  ctx.fillRect(legendX, boxY, boxSize, boxSize);\n\n\t  // 绘制文字\n\t  ctx.fillStyle = '#000000'; // 使用深色以提高文字的清晰度\n\t  const textY = legendY + offsetY + lineHeight / 2; // 计算文字的垂直位置，使其与颜色框的中心对齐\n\t  ctx.fillText(`${klass.name} : ${classCounts[klass.name]}`, legendX + boxSize + 5, textY); // 文字垂直居中\n\n\n\t  // 更新偏移量，准备绘制下一行\n\t  offsetY += lineHeight;\n\t}\n\n\n\n};\n\nclass Colors {\n  // ultralytics color palette https://ultralytics.com/\n  constructor() {\n    this.palette = [\n      \"#344593\",\n      \"#48F90A\",\n      \"#FF701F\",\n      \"#FFB21D\",\n      \"#CFD231\",\n      \"#48F90A\",\n      \"#92CC17\",\n      \"#3DDB86\",\n      \"#1A9334\",\n      \"#00D4BB\",\n      \"#2C99A8\",\n      \"#00C2FF\",\n      \"#344593\",\n      \"#6473FF\",\n      \"#0018EC\",\n      \"#8438FF\",\n      \"#520085\",\n      \"#CB38FF\",\n      \"#FF95C8\",\n      \"#FF37C7\",\n    ];\n    this.n = this.palette.length;\n  }\n\n  get = (i) => this.palette[Math.floor(i) % this.n];\n\n  static hexToRgba = (hex, alpha) => {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? `rgba(${[parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)].join(\n          \", \"\n        )}, ${alpha})`\n      : null;\n  };\n}\n","import * as tf from \"@tensorflow/tfjs\";\nimport { renderBoxes } from \"./renderBox\";\nimport labels from \"./labels.json\";\n\nconst numClass = labels.length;\n\n/**\n * Preprocess image / frame before forwarded into the model\n * @param {HTMLVideoElement|HTMLImageElement} source\n * @param {Number} modelWidth\n * @param {Number} modelHeight\n * @returns input tensor, xRatio and yRatio\n */\nconst preprocess = (source, modelWidth, modelHeight) => {\n  let xRatio, yRatio; // ratios for boxes\n\n  const input = tf.tidy(() => {\n    const img = tf.browser.fromPixels(source);\n\n    // padding image to square => [n, m] to [n, n], n > m\n    const [h, w] = img.shape.slice(0, 2); // get source width and height\n    const maxSize = Math.max(w, h); // get max size\n    const imgPadded = img.pad([\n      [0, maxSize - h], // padding y [bottom only]\n      [0, maxSize - w], // padding x [right only]\n      [0, 0],\n    ]);\n\n    xRatio = maxSize / w; // update xRatio\n    yRatio = maxSize / h; // update yRatio\n\n    return tf.image\n      .resizeBilinear(imgPadded, [modelWidth, modelHeight]) // resize frame\n      .div(255.0) // normalize\n      .expandDims(0); // add batch\n  });\n\n  return [input, xRatio, yRatio];\n};\n\n/**\n * Function run inference and do detection from source.\n * @param {HTMLImageElement|HTMLVideoElement} source\n * @param {tf.GraphModel} model loaded YOLOv8 tensorflow.js model\n * @param {HTMLCanvasElement} canvasRef canvas reference\n * @param {VoidFunction} callback function to run after detection process\n */\nexport const detect = async (source, model, canvasRef, callback = () => {}) => {\n  const [modelWidth, modelHeight] = model.inputShape.slice(1, 3); // get model width and height\n\n  tf.engine().startScope(); // start scoping tf engine\n  const [input, xRatio, yRatio] = preprocess(source, modelWidth, modelHeight); // preprocess image\n\n  const res = model.net.execute(input); // inference model\n  const transRes = res.transpose([0, 2, 1]); // transpose result [b, det, n] => [b, n, det]\n  const boxes = tf.tidy(() => {\n    const w = transRes.slice([0, 0, 2], [-1, -1, 1]); // get width\n    const h = transRes.slice([0, 0, 3], [-1, -1, 1]); // get height\n    const x1 = tf.sub(transRes.slice([0, 0, 0], [-1, -1, 1]), tf.div(w, 2)); // x1\n    const y1 = tf.sub(transRes.slice([0, 0, 1], [-1, -1, 1]), tf.div(h, 2)); // y1\n    return tf\n      .concat(\n        [\n          y1,\n          x1,\n          tf.add(y1, h), //y2\n          tf.add(x1, w), //x2\n        ],\n        2\n      )\n      .squeeze();\n  }); // process boxes [y1, x1, y2, x2]\n\n  const [scores, classes] = tf.tidy(() => {\n    // class scores\n    const rawScores = transRes.slice([0, 0, 4], [-1, -1, numClass]).squeeze(0); // #6 only squeeze axis 0 to handle only 1 class models\n    return [rawScores.max(1), rawScores.argMax(1)];\n  }); // get max scores and classes index\n\n  const nms = await tf.image.nonMaxSuppressionAsync(boxes, scores, 500, 0.45, 0.2); // NMS to filter boxes\n\n  const boxes_data = boxes.gather(nms, 0).dataSync(); // indexing boxes by nms index\n  const scores_data = scores.gather(nms, 0).dataSync(); // indexing scores by nms index\n  const classes_data = classes.gather(nms, 0).dataSync(); // indexing classes by nms index\n\n  renderBoxes(canvasRef, boxes_data, scores_data, classes_data, [xRatio, yRatio]); // render boxes\n  tf.dispose([res, transRes, boxes, scores, classes, nms]); // clear memory\n\n  callback();\n\n  tf.engine().endScope(); // end of scoping\n};\n\n/**\n * Function to detect video from every source.\n * @param {HTMLVideoElement} vidSource video source\n * @param {tf.GraphModel} model loaded YOLOv8 tensorflow.js model\n * @param {HTMLCanvasElement} canvasRef canvas reference\n */\nexport const detectVideo = (vidSource, model, canvasRef) => {\n  /**\n   * Function to detect every frame from video\n   */\n  const detectFrame = async () => {\n    if (vidSource.videoWidth === 0 && vidSource.srcObject === null) {\n      const ctx = canvasRef.getContext(\"2d\");\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clean canvas\n      return; // handle if source is closed\n    }\n\n    detect(vidSource, model, canvasRef, () => {\n      requestAnimationFrame(detectFrame); // get another frame\n    });\n  };\n\n  detectFrame(); // initialize to detect every frame\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\"; // set backend to webgl\nimport Loader from \"./components/loader\";\nimport ButtonHandler from \"./components/btn-handler\";\nimport { detect, detectVideo } from \"./utils/detect\";\nimport \"./style/App.css\";\n\nconst App = () => {\n  const [loading, setLoading] = useState({ loading: true, progress: 0 }); // loading state\n  const [model, setModel] = useState({\n    net: null,\n    inputShape: [1, 0, 0, 3],\n  }); // init model & input shape\n\n  // references\n  const imageRef = useRef(null);\n  const cameraRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // model configs\n  const modelName = \"yolov8n_FaceMask\";\n\n  useEffect(() => {\n    tf.ready().then(async () => {\n      const yolov8 = await tf.loadGraphModel(\n        `${window.location.href}/${modelName}_web_model/model.json`,\n        {\n          onProgress: (fractions) => {\n            setLoading({ loading: true, progress: fractions }); // set loading fractions\n          },\n        }\n      ); // load model\n\n      // warming up model\n      const dummyInput = tf.ones(yolov8.inputs[0].shape);\n      const warmupResults = yolov8.execute(dummyInput);\n\n      setLoading({ loading: false, progress: 1 });\n      setModel({\n        net: yolov8,\n        inputShape: yolov8.inputs[0].shape,\n      }); // set model & input shape\n\n      tf.dispose([warmupResults, dummyInput]); // cleanup memory\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {loading.loading && <Loader>Loading model... {(loading.progress * 100).toFixed(2)}%</Loader>}\n      <div className=\"header\">\n        <h1>😷 Gesichtsmaskenerkennung</h1>\n        <p>\n          KI-Gesichtsmaskenerkennung direkt in  Browser \n        </p>\n        <p>\n          Serving : <code className=\"code\">{modelName}</code>\n        </p>\n      </div>\n\n      <div className=\"content\">\n        <img\n          src=\"#\"\n          ref={imageRef}\n          onLoad={() => detect(imageRef.current, model, canvasRef.current)}\n        />\n        <video\n          autoPlay\n          muted\n          ref={cameraRef}\n          onPlay={() => detectVideo(cameraRef.current, model, canvasRef.current)}\n        />\n        <video\n          autoPlay\n          muted\n          ref={videoRef}\n          onPlay={() => detectVideo(videoRef.current, model, canvasRef.current)}\n        />\n        <canvas width={model.inputShape[1]} height={model.inputShape[2]} ref={canvasRef} />\n      </div>\n\n      <ButtonHandler imageRef={imageRef} cameraRef={cameraRef} videoRef={videoRef} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./style/index.css\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}