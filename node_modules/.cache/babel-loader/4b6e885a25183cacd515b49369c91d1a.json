{"ast":null,"code":"/**\n * @license\n * Copyright 2023 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { Layer } from './topology';\nimport { RandomSeed } from '../backend/random_seed';\nclass BaseRandomLayer extends Layer {\n  constructor(args) {\n    super(args);\n    this.randomGenerator = new RandomSeed(args.seed);\n  }\n  getConfig() {\n    const config = {\n      'seed': this.randomGenerator.seed\n    };\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n// A layer handle the random number creation and savemodel behavior.\n/** @nocollapse */\nBaseRandomLayer.className = 'BaseRandomLayer';\nexport { BaseRandomLayer };","map":{"version":3,"sources":["../../../../../../tfjs-layers/src/engine/base_random_layer.ts"],"names":[],"mappings":"AAAA;;;;;;;;AAQG;AAEH,SAAoB,KAAK,QAAQ,YAAY;AAC7C,SAAS,UAAU,QAAQ,wBAAwB;AAOnD,MAAsB,eAAgB,SAAQ,KAAK,CAAA;EAMjD,WAAA,CAAY,IAAyB,EAAA;IACnC,KAAK,CAAC,IAAI,CAAC;IACX,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;EAClD;EAES,SAAS,CAAA,EAAA;IAChB,MAAM,MAAM,GAA6B;MACvC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC;KAC9B;IAED,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,CAAA,CAAE;IACpC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC;IACjC,OAAO,MAAM;EACf;;AAlBA;AACA;AACO,eAAA,CAAA,SAAS,GAAG,iBAAiB;SAHhB,eAAe","sourcesContent":["/**\n * @license\n * Copyright 2023 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\nimport { LayerArgs, Layer } from './topology';\nimport { RandomSeed } from '../backend/random_seed';\nimport { serialization } from '@tensorflow/tfjs-core';\n\nexport declare interface BaseRandomLayerArgs extends LayerArgs {\n  seed?: number;\n}\n\nexport abstract class BaseRandomLayer extends Layer {\n  // A layer handle the random number creation and savemodel behavior.\n  /** @nocollapse */\n  static className = 'BaseRandomLayer';\n  protected randomGenerator: RandomSeed;\n\n  constructor(args: BaseRandomLayerArgs) {\n    super(args);\n    this.randomGenerator = new RandomSeed(args.seed);\n  }\n\n  override getConfig(): serialization.ConfigDict {\n    const config: serialization.ConfigDict = {\n      'seed': this.randomGenerator.seed\n    };\n\n    const baseConfig = super.getConfig();\n    Object.assign(config, baseConfig);\n    return config;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}